{
  "manifest": {
    "name": "rollup-plugin-node-resolve",
    "description": "Bundle third-party dependencies in node_modules",
    "version": "4.0.1",
    "devDependencies": {
      "buble": "^0.19.6",
      "es5-ext": "^0.10.47",
      "eslint": "^5.14.1",
      "mocha": "^6.0.0",
      "rollup": "^1.2.2",
      "rollup-plugin-buble": "^0.19.6",
      "rollup-plugin-commonjs": "^9.2.0",
      "string-capitalize": "^1.0.1",
      "vlq": "^1.0.0"
    },
    "main": "dist/rollup-plugin-node-resolve.cjs.js",
    "module": "dist/rollup-plugin-node-resolve.es.js",
    "jsnext:main": "dist/rollup-plugin-node-resolve.es.js",
    "scripts": {
      "build": "rollup -c",
      "pretest": "npm run build",
      "test": "mocha",
      "posttest": "eslint src test/*.js",
      "lint": "eslint src",
      "prepublishOnly": "npm test",
      "prepare": "npm run build"
    },
    "files": [
      "src",
      "dist"
    ],
    "dependencies": {
      "builtin-modules": "^3.0.0",
      "is-module": "^1.0.0",
      "resolve": "^1.10.0"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/rollup/rollup-plugin-node-resolve.git"
    },
    "keywords": [
      "rollup",
      "rollup-plugin",
      "es2015",
      "npm",
      "modules"
    ],
    "author": {
      "name": "Rich Harris",
      "email": "richard.a.harris@gmail.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/rollup/rollup-plugin-node-resolve/issues"
    },
    "homepage": "https://github.com/rollup/rollup-plugin-node-resolve#readme",
    "_registry": "npm",
    "_loc": "/home/frappe/.cache/yarn/v6/npm-rollup-plugin-node-resolve-4.0.1-f95765d174e5daeef9ea6268566141f53aa9d422-integrity/node_modules/rollup-plugin-node-resolve/package.json",
    "readmeFilename": "README.md",
    "readme": "# rollup-plugin-node-resolve\n\n*This plugin used to be called rollup-plugin-npm*\n\nLocate modules using the [Node resolution algorithm](https://nodejs.org/api/modules.html#modules_all_together), for using third party modules in `node_modules`\n\n## Installation\n\n```bash\nnpm install --save-dev rollup-plugin-node-resolve\n```\n\n## Usage\n\n```js\n// rollup.config.js\nimport resolve from 'rollup-plugin-node-resolve';\n\nexport default {\n  input: 'main.js',\n  output: {\n    file: 'bundle.js',\n    format: 'iife'\n  },\n  name: 'MyModule',\n  plugins: [\n    resolve({\n      // use \"module\" field for ES6 module if possible\n      module: true, // Default: true\n\n      // use \"jsnext:main\" if possible\n      // legacy field pointing to ES6 module in third-party libraries,\n      // deprecated in favor of \"pkg.module\":\n      // - see: https://github.com/rollup/rollup/wiki/pkg.module\n      jsnext: true,  // Default: false\n\n      // use \"main\" field or index.js, even if it's not an ES6 module\n      // (needs to be converted from CommonJS to ES6\n      // â€“ see https://github.com/rollup/rollup-plugin-commonjs\n      main: true,  // Default: true\n\n      // some package.json files have a `browser` field which\n      // specifies alternative files to load for people bundling\n      // for the browser. If that's you, use this option, otherwise\n      // pkg.browser will be ignored\n      browser: true,  // Default: false\n\n      // not all files you want to resolve are .js files\n      extensions: [ '.mjs', '.js', '.jsx', '.json' ],  // Default: [ '.mjs', '.js', '.json', '.node' ]\n\n      // whether to prefer built-in modules (e.g. `fs`, `path`) or\n      // local ones with the same names\n      preferBuiltins: false,  // Default: true\n\n      // Lock the module search in this path (like a chroot). Module defined\n      // outside this path will be marked as external\n      jail: '/my/jail/path', // Default: '/'\n\n      // Set to an array of strings and/or regexps to lock the module search\n      // to modules that match at least one entry. Modules not matching any\n      // entry will be marked as external\n      only: [ 'some_module', /^@some_scope\\/.*$/ ], // Default: null\n\n      // If true, inspect resolved files to check that they are\n      // ES2015 modules\n      modulesOnly: true, // Default: false\n\n      // Any additional options that should be passed through\n      // to node-resolve\n      customResolveOptions: {\n        moduleDirectory: 'js_modules'\n      }\n    })\n  ]\n};\n```\n\n## Using with rollup-plugin-commonjs\n\nSince most packages in your node_modules folder are probably legacy CommonJS rather than JavaScript modules, you may need to use [rollup-plugin-commonjs](https://github.com/rollup/rollup-plugin-commonjs):\n\n```js\n// rollup.config.js\nimport resolve from 'rollup-plugin-node-resolve';\nimport commonjs from 'rollup-plugin-commonjs';\n\nexport default {\n  input: 'main.js',\n  output: {\n    file: 'bundle.js',\n    format: 'iife'\n  },\n  name: 'MyModule',\n  plugins: [\n    resolve(),\n    commonjs()\n  ]\n};\n```\n\n\n## License\n\nMIT\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/rollup-plugin-node-resolve/-/rollup-plugin-node-resolve-4.0.1.tgz#f95765d174e5daeef9ea6268566141f53aa9d422",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/rollup-plugin-node-resolve/-/rollup-plugin-node-resolve-4.0.1.tgz",
    "hash": "f95765d174e5daeef9ea6268566141f53aa9d422",
    "integrity": "sha512-fSS7YDuCe0gYqKsr5OvxMloeZYUSgN43Ypi1WeRZzQcWtHgFayV5tUSPYpxuaioIIWaBXl6NrVk0T2/sKwueLg==",
    "registry": "npm",
    "packageName": "rollup-plugin-node-resolve",
    "cacheIntegrity": "sha512-fSS7YDuCe0gYqKsr5OvxMloeZYUSgN43Ypi1WeRZzQcWtHgFayV5tUSPYpxuaioIIWaBXl6NrVk0T2/sKwueLg== sha1-+Vdl0XTl2u756mJoVmFB9Tqp1CI="
  },
  "registry": "npm",
  "hash": "f95765d174e5daeef9ea6268566141f53aa9d422"
}