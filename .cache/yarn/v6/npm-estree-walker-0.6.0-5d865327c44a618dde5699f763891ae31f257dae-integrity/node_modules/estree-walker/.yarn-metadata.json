{
  "manifest": {
    "name": "estree-walker",
    "description": "Traverse an ESTree-compliant AST",
    "version": "0.6.0",
    "author": {
      "name": "Rich Harris"
    },
    "license": "MIT",
    "typings": "index.d.ts",
    "repository": {
      "type": "git",
      "url": "https://github.com/Rich-Harris/estree-walker"
    },
    "main": "dist/estree-walker.umd.js",
    "module": "src/estree-walker.js",
    "scripts": {
      "prepublishOnly": "npm test",
      "build": "rollup -c",
      "test": "mocha test/test.js",
      "pretest": "npm run build"
    },
    "devDependencies": {
      "mocha": "^5.2.0",
      "rollup": "^0.67.3"
    },
    "files": [
      "src",
      "dist",
      "index.d.ts",
      "README.md"
    ],
    "_registry": "npm",
    "_loc": "/home/frappe/.cache/yarn/v6/npm-estree-walker-0.6.0-5d865327c44a618dde5699f763891ae31f257dae-integrity/node_modules/estree-walker/package.json",
    "readmeFilename": "README.md",
    "readme": "# estree-walker\n\nSimple utility for walking an [ESTree](https://github.com/estree/estree)-compliant AST, such as one generated by [acorn](https://github.com/marijnh/acorn).\n\n\n## Installation\n\n```bash\nnpm i estree-walker\n```\n\n\n## Usage\n\n```js\nvar walk = require( 'estree-walker' ).walk;\nvar acorn = require( 'acorn' );\n\nast = acorn.parse( sourceCode, options ); // https://github.com/marijnh/acorn\n\nwalk( ast, {\n  enter: function ( node, parent ) {\n    // some code happens\n  },\n  leave: function ( node, parent ) {\n  \t// some code happens\n  }\n});\n```\n\nInside the `enter` function, calling `this.skip()` will prevent the node's children being walked, or the `leave` function (which is optional) being called.\n\n\n## Why not use estraverse?\n\nThe ESTree spec is evolving to accommodate ES6/7. I've had a couple of experiences where [estraverse](https://github.com/estools/estraverse) was unable to handle an AST generated by recent versions of acorn, because it hard-codes visitor keys.\n\nestree-walker, by contrast, simply enumerates a node's properties to find child nodes (and child lists of nodes), and is therefore resistant to spec changes. It's also much smaller. (The performance, if you're wondering, is basically identical.)\n\nNone of which should be taken as criticism of estraverse, which has more features and has been battle-tested in many more situations, and for which I'm very grateful.\n\n\n## License\n\nMIT"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/estree-walker/-/estree-walker-0.6.0.tgz#5d865327c44a618dde5699f763891ae31f257dae",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/estree-walker/-/estree-walker-0.6.0.tgz",
    "hash": "5d865327c44a618dde5699f763891ae31f257dae",
    "integrity": "sha512-peq1RfVAVzr3PU/jL31RaOjUKLoZJpObQWJJ+LgfcxDUifyLZ1RjPQZTl0pzj2uJ45b7A7XpyppXvxdEqzo4rw==",
    "registry": "npm",
    "packageName": "estree-walker",
    "cacheIntegrity": "sha512-peq1RfVAVzr3PU/jL31RaOjUKLoZJpObQWJJ+LgfcxDUifyLZ1RjPQZTl0pzj2uJ45b7A7XpyppXvxdEqzo4rw== sha1-XYZTJ8RKYY3eVpn3Y4ka4x8lfa4="
  },
  "registry": "npm",
  "hash": "5d865327c44a618dde5699f763891ae31f257dae"
}