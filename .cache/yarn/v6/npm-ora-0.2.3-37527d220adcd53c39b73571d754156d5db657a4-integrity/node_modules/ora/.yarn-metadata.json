{
  "manifest": {
    "name": "ora",
    "version": "0.2.3",
    "description": "Elegant terminal spinner",
    "license": "MIT",
    "repository": {
      "type": "git",
      "url": "https://github.com/sindresorhus/ora.git"
    },
    "author": {
      "name": "Sindre Sorhus",
      "email": "sindresorhus@gmail.com",
      "url": "sindresorhus.com"
    },
    "engines": {
      "node": ">=0.10.0"
    },
    "scripts": {
      "test": "xo && ava"
    },
    "files": [
      "index.js"
    ],
    "keywords": [
      "cli",
      "spinner",
      "spinners",
      "terminal",
      "term",
      "console",
      "ascii",
      "unicode",
      "loading",
      "indicator",
      "progress",
      "busy",
      "wait",
      "idle"
    ],
    "dependencies": {
      "chalk": "^1.1.1",
      "cli-cursor": "^1.0.2",
      "cli-spinners": "^0.1.2",
      "object-assign": "^4.0.1"
    },
    "devDependencies": {
      "ava": "*",
      "hook-std": "^0.2.0",
      "xo": "*"
    },
    "_registry": "npm",
    "_loc": "/home/frappe/.cache/yarn/v6/npm-ora-0.2.3-37527d220adcd53c39b73571d754156d5db657a4-integrity/node_modules/ora/package.json",
    "readmeFilename": "readme.md",
    "readme": "# ora [![Build Status](https://travis-ci.org/sindresorhus/ora.svg?branch=master)](https://travis-ci.org/sindresorhus/ora)\n\n> Elegant terminal spinner\n\n<img src=\"screenshot.gif\" width=\"629\">\n\n\n## Install\n\n```\n$ npm install --save ora\n```\n\n\n## Usage\n\n```js\nconst ora = require('ora');\n\nconst spinner = ora('Loading unicorns').start();\n\nsetTimeout(() => {\n\tspinner.color = 'yellow';\n\tspinner.text = 'Loading rainbows';\n}, 1000);\n```\n\n\n## API\n\nIt will gracefully not do anything when there's no TTY or when in a CI.\n\n### ora([options|text])\n\nIf a string is provided, it is treated as a shortcut for [`options.text`](#text).\n\n#### options\n\nType: `object`\n\n##### text\n\nType: `string`\n\nText to display after the spinner.\n\n##### spinner\n\nType: `string` `object`<br>\nDefault: `dots` <img src=\"screenshot-spinner.gif\" width=\"14\">\n\nName of one of the [provided spinners](https://github.com/sindresorhus/cli-spinners/blob/master/spinners.json). See `example.js` in this repo if you want to test out different spinners.\n\nOr an object like:\n\n```js\n{\n\tinterval: 80, // optional\n\tframes: ['-', '+', '-']\n}\n```\n\n##### color\n\nType: `string`<br>\nDefault: `cyan`<br>\nValues: `black` `red` `green` `yellow` `blue` `magenta` `cyan` `white` `gray`\n\nColor of the spinner.\n\n##### interval\n\nType: `number`<br>\nDefault: Provided by the spinner or `100`\n\nInterval between each frame.\n\nSpinners provide their own recommended interval, so you don't really need to specify this.\n\n##### stream\n\nType: `WritableStream`<br>\nDefault: `process.stderr`\n\nStream to write the output.\n\nYou could for example set this to `process.stdout` instead.\n\n##### enabled\n\nType: `boolean`<br>\nDefault: `false`\n\nForce enabling of the spinner regardless of the `stream` not being run inside a TTY context and/or in a CI environment.\n\n### Instance\n\n#### .start()\n\nStart the spinner. Returns the instance.\n\n#### .stop()\n\nStop and clear the spinner. Returns the instance.\n\n#### .clear()\n\nClear the spinner. Returns the instance.\n\n#### .render()\n\nManually render a new frame. Returns the instance.\n\n#### .frame()\n\nGet a new frame.\n\n#### .text\n\nChange the text.\n\n#### .color\n\nChange the spinner color.\n\n\n## Related\n\n- [cli-spinners](https://github.com/sindresorhus/cli-spinners) - Spinners for use in the terminal\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
    "licenseText": "The MIT License (MIT)\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/ora/-/ora-0.2.3.tgz#37527d220adcd53c39b73571d754156d5db657a4",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/ora/-/ora-0.2.3.tgz",
    "hash": "37527d220adcd53c39b73571d754156d5db657a4",
    "integrity": "sha1-N1J9Igrc1Tw5tzVx11QVbV22V6Q=",
    "registry": "npm",
    "packageName": "ora",
    "cacheIntegrity": "sha512-MYGyg17e2GcoDlFrAP39zu4nrAQ+STzl4fosWjR8vAlT0a2wKuuAGZTecffdVLPsnEfxXVlrUcDZ1DU5skr+QQ== sha1-N1J9Igrc1Tw5tzVx11QVbV22V6Q="
  },
  "registry": "npm",
  "hash": "37527d220adcd53c39b73571d754156d5db657a4"
}