{
  "manifest": {
    "version": "2.1.0",
    "name": "rollup-plugin-multi-entry",
    "description": "Allows specifying multiple entry points with rollup.",
    "main": "dist/rollup-plugin-multi-entry.js",
    "jsnext:main": "dist/rollup-plugin-multi-entry.mjs",
    "scripts": {
      "flow": "flow check",
      "build": "rm -rf dist && rollup -c",
      "pretest": "yarn run flow && yarn run build",
      "test": "mocha",
      "prepare": "yarn build",
      "prepublishOnly": "yarn test"
    },
    "repository": {
      "type": "git",
      "url": "https://github.com/rollup/rollup-plugin-multi-entry.git"
    },
    "keywords": [
      "rollup-plugin"
    ],
    "files": [
      "dist"
    ],
    "author": {
      "name": "Brian Donovan",
      "email": "me@brian-donovan.com"
    },
    "license": "MIT",
    "bugs": {
      "url": "https://github.com/rollup/rollup-plugin-multi-entry/issues"
    },
    "homepage": "https://github.com/rollup/rollup-plugin-multi-entry#readme",
    "dependencies": {
      "matched": "^1.0.2"
    },
    "devDependencies": {
      "@babel/core": "^7.2.0",
      "@babel/plugin-transform-flow-strip-types": "^7.2.0",
      "@babel/preset-env": "^7.2.0",
      "@babel/register": "^7.0.0",
      "@commitlint/config-conventional": "^7.1.2",
      "commitlint": "^7.2.1",
      "flow-bin": "^0.87.0",
      "globby": "^8.0.1",
      "husky": "^1.2.0",
      "lint-staged": "^8.1.0",
      "mocha": "^5.2.0",
      "prettier": "^1.9.2",
      "prettier-check": "^2.0.0",
      "rollup": "^0.67.4",
      "rollup-plugin-babel": "^4.0.3"
    },
    "_registry": "npm",
    "_loc": "/home/frappe/.cache/yarn/v6/npm-rollup-plugin-multi-entry-2.1.0-64a7287adfd437cab33bf6364a8d8ab1e7a7725d-integrity/node_modules/rollup-plugin-multi-entry/package.json",
    "readmeFilename": "README.md",
    "readme": "# rollup-plugin-multi-entry\n\nUse multiple entry points in your [rollup](https://github.com/rollup/rollup)\nbundle. This is particularly useful for tests, but can also be used to package\na library. The exports from all the entry points will be combined, e.g.\n\n```js\n// a.js\nexport const a = 1;\n\n// b.js\nexport const b = 2;\n\n// c.js\nexport const c = 3;\n```\n\nUsing all three files above as entry points will yield a bundle with exports for\n`a`, `b`, and `c`.\n\n> _Note_: Default exports like `export default class Foo {...}` will not be exported, only named exports are allowed.\n\n## Install\n\n```shell\n# We use yarn:\n$ yarn add [--dev] rollup-plugin-multi-entry\n# But you can use npm if you prefer:\n$ npm install [--save-dev] rollup-plugin-multi-entry\n```\n\n## Usage\n\nThis plugin requires at least v0.48.0 of rollup. In `rollup.config.js`:\n\n```js\nimport multiEntry from \"rollup-plugin-multi-entry\";\n\nexport default {\n  input: \"test/**/*.js\",\n  plugins: [multiEntry()]\n};\n```\n\nThe `entry` above is the simplest form which simply takes a glob string. If you\nwish, you may pass an array of glob strings or, for finer control, an object\nwith `include` and `exclude` properties each taking an array of glob strings,\ne.g.\n\n```js\n// The usual rollup entry configuration works.\nexport default {\n  input: 'just/one/file.js',\n  plugins: [multiEntry()]\n  // ...\n};\n\n// As does a glob of files.\nexport default {\n  input: 'a/glob/of/files/**/*.js',\n  plugins: [multiEntry()]\n  // ...\n};\n\n// Or an array of files and globs.\nexport default {\n  input: ['an/array.js', 'of/files.js', 'or/globs/**/*.js'],\n  plugins: [multiEntry()]\n  // ...\n};\n\n// For maximum control, arrays of globs to include and exclude.\nexport default {\n  input: {\n    include: ['files.js', 'and/globs/**/*.js', 'to/include.js'],\n    exclude: ['those/files.js', 'and/globs/*.to.be.excluded.js']\n  },\n  plugins: [multiEntry()]\n  // ...\n};\n```\n\nSometimes you may not want to export anything from the rolled-up bundle. In\nsuch cases, use the `exports: false` option like so:\n\n```js\nexport default {\n  input: \"src/*.js\",\n  plugins: [multiEntry({ exports: false })]\n};\n```\n\n## License\n\nMIT\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/rollup-plugin-multi-entry/-/rollup-plugin-multi-entry-2.1.0.tgz#64a7287adfd437cab33bf6364a8d8ab1e7a7725d",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/rollup-plugin-multi-entry/-/rollup-plugin-multi-entry-2.1.0.tgz",
    "hash": "64a7287adfd437cab33bf6364a8d8ab1e7a7725d",
    "integrity": "sha512-YVVsI15uvbxMKdeYS5NXQa5zbVr/DYdDBBwseC80+KAc7mqDUjM6Qe4wl+jFucVw1yvBDZFk0PPSBZqoLq8xUA==",
    "registry": "npm",
    "packageName": "rollup-plugin-multi-entry",
    "cacheIntegrity": "sha512-YVVsI15uvbxMKdeYS5NXQa5zbVr/DYdDBBwseC80+KAc7mqDUjM6Qe4wl+jFucVw1yvBDZFk0PPSBZqoLq8xUA== sha1-ZKcoet/UN8qzO/Y2So2Kseencl0="
  },
  "registry": "npm",
  "hash": "64a7287adfd437cab33bf6364a8d8ab1e7a7725d"
}